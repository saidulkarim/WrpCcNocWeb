@using static WrpCcNocWeb.ViewModels.GeneralInfo
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var language = HttpContextAccessor.HttpContext.Request.Cookies["FormLanguage"].ToString();
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title mb-3">
                    <b>@ViewBag.ProjectTitle</b>

                    <button id="btnGoBack" type="button" class="btn btn-secondary float-right" style="margin-top: -10px;">Back</button>
                </h4>
                <form>
                    <div id="basicwizard">
                        <ul class="nav nav-pills bg-light nav-justified form-wizard-header">
                            <li class="nav-item">
                                <a id="lnkTab1" href="#basictab1" data-toggle="tab" class="nav-link rounded-0 pt-2 pb-2 active">
                                    <i class="mdi mdi-format-float-right mr-1"></i>
                                    <span class="d-none d-sm-inline">
                                        @if (language == "1")
                                        {
                                            <span>আবেদনপত্র</span>
                                        }
                                        else
                                        {
                                            <span>Application Form</span>
                                        }
                                    </span>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a id="lnkTab2" href="#basictab2" data-toggle="tab" class="nav-link rounded-0 pt-2 pb-2">
                                    <i class="mdi mdi-face-profile mr-1"></i>
                                    <span class="d-none d-sm-inline">
                                        @if (language == "1")
                                        {
                                            <span>প্রিভিউ</span>
                                        }
                                        else
                                        {
                                            <span>Preview</span>
                                        }
                                    </span>
                                </a>
                            </li>
                        </ul>

                        <div class="tab-content b-0 mb-0">
                            <div class="tab-pane active" id="basictab1">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="card-box">
                                            <div class="row">
                                                @Html.Hidden("NocApplicationId")
                                                @Html.Hidden("AppSubmissionId")
                                                @Html.Hidden("ApplicationStateId")
                                                @Html.Hidden("ApprovalStatusId")
                                                @Html.Hidden("NocAppIndvId")
                                                @Html.Hidden("UserId")

                                                <div class="col-sm-3">
                                                    @{ Html.RenderPartial("noc/_1TabPanel"); }
                                                </div> <!-- end col-->
                                                <div class="col-sm-9">
                                                    <div class="tab-content pt-0">
                                                        <div class="tab-pane fade active show" id="v-gen-info" role="tabpanel" aria-labelledby="v-gen-info-tab">
                                                            <div class="card-box">
                                                                @{ Html.RenderPartial("noc/_2GeneralInfo"); }
                                                            </div>
                                                        </div>

                                                        <div class="tab-pane fade" id="v-tech-info" role="tabpanel" aria-labelledby="v-tech-info-tab">
                                                            <div class="card-box">
                                                                @*<div id="tech-info-form">
                                                                    <div class="card">
                                                                        <div class="card-header bg-blue py-3 text-white cursor" data-toggle="collapse" href="#cardCollpase31">
                                                                            <div class="card-widgets">
                                                                                <a data-toggle="collapse" href="#cardCollpase31" role="button" aria-expanded="false" aria-controls="cardCollpase2"><i class="mdi mdi-minus"></i></a>
                                                                            </div>
                                                                            <h5 class="card-title mb-0 text-white">
                                                                                @if (language == "1")
                                                                                {<span>১. বেজলাইন সম্পর্কিত তথ্য বা অবস্থা পর্যালোচনা</span>}
                                                                                else
                                                                                {<span>1. Discussion about baseline related information or situation</span>}
                                                                            </h5>
                                                                        </div>
                                                                        <div id="cardCollpase31" class="collapse show">
                                                                            <div class="card-body">
                                                                                <div class="form-group">
                                                                                    <label for="HydrologicalRegion">
                                                                                        @if (language == "1")
                                                                                        {<span>i. হাইড্রোলজিক্যাল অঞ্চল</span>}
                                                                                        else
                                                                                        {<span>i. Hydrological Region</span>}
                                                                                    </label>
                                                                                    <div id="chkHydrologicalRegions" style="margin-left: 5px;">
                                                                                        @{
                                                                                            List<LookUpCcModHydroRegion> _hydro_regions = ViewBag.LookUpCcModHydroRegion;

                                                                                            if (_hydro_regions.Count > 0)
                                                                                            {
                                                                                                foreach (LookUpCcModHydroRegion hr in _hydro_regions)
                                                                                                {
                                                                                                    var id = "chkHydroRegion" + hr.HydroRegionId;

                                                                                                    if (language == "1")
                                                                                                    {
                                                                                                        <div class="checkbox checkbox-pink mb-1 form-check-inline" style="margin-right: 25px;" data-toggle="tooltip" data-placement="top" title="" data-original-title="@hr.HydroRegionFullNameBn">
                                                                                                            <input type="checkbox" name="hydrological_region" id="@id" value="@hr.HydroRegionId" data-parsley-multiple="hydrological_region">
                                                                                                            <label for="@id"> @hr.HydroRegionFullNameBn </label>
                                                                                                        </div>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <div class="checkbox checkbox-pink mb-1 form-check-inline" style="margin-right: 25px;" data-toggle="tooltip" data-placement="top" title="" data-original-title="@hr.HydroRegionFullName">
                                                                                                            <input type="checkbox" name="hydrological_region" id="@id" value="@hr.HydroRegionId" data-parsley-multiple="hydrological_region">
                                                                                                            <label for="@id"> @hr.HydroRegionFullName </label>
                                                                                                        </div>
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>*@

                                                                <hr />

                                                                <div class="form-group mb-0">
                                                                    <button id="btnSaveTechInfo" type="button" class="btn btn-info waves-effect waves-light">
                                                                        <span class="btn-label"><i class="mdi mdi-content-save"></i></span>
                                                                        @if (language == "1")
                                                                        {
                                                                            <span>সংরক্ষণ করুন</span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>Save</span>
                                                                        }
                                                                        <span class="myspinner spinner-border spinner-border-sm mr-1 d-none"></span>
                                                                    </button>

                                                                    <button id="btnClearTechInfo" type="button" class="btn btn-danger waves-effect waves-light">
                                                                        <span class="btn-label"><i class="mdi mdi-close-outline"></i></span>
                                                                        @if (language == "1")
                                                                        {
                                                                            <span>পরিষ্কার করুন</span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>Clear</span>
                                                                        }
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="tab-pane fade" id="v-deed-obligatory" role="tabpanel" aria-labelledby="v-deed-obligatory-tab">
                                                            <div class="card-box">
                                                                @*@{ Html.RenderPartial("form/_4DeedObligatory"); }*@
                                                            </div>
                                                        </div>

                                                        <div class="tab-pane fade" id="v-administrative" role="tabpanel" aria-labelledby="v-administrative-tab">
                                                            <div class="card-box">
                                                                @*@{ Html.RenderPartial("form/_5Administrative"); }*@
                                                            </div>
                                                        </div>

                                                        <div class="tab-pane fade" id="v-final-submit" role="tabpanel" aria-labelledby="v-final-submit-tab">
                                                            <div class="card-box">
                                                                @{ Html.RenderPartial("form/_6FinalSubmit"); }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane" id="basictab2">
                                <div class="row">
                                    @*@Html.Partial("_Preview")*@
                                </div>
                            </div>

                            @*<ul class="list-inline wizard mb-0">
                                <li id="btnPrevious" class="previous list-inline-item disabled">
                                    <a href="javascript: void(0);" class="btn btn-secondary">Previous</a>
                                </li>
                                <li id="btnNext" class="next list-inline-item float-right">
                                    <a href="javascript: void(0);" class="btn btn-secondary">Next</a>
                                </li>
                                </ul>*@
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section PageScripts {
    <script src="~/libs/twitter-bootstrap-wizard/jquery.bootstrap.wizard.min.js"></script>
    <script src="~/js/pages/form-wizard.init.js"></script>

    <script type="text/javascript">
        jQuery(document).ready(function () {
            $("#btnGoBack").click(function () {
                GoBack();
            });

            var input_lang = '@language';
            if (input_lang == 1) {
                $('textarea, input[type=text]').avro({ 'bn': true });
            } else {
                $('textarea, input[type=text]').avro({ 'bn': false });
            }

            //var projectId = 'ViewBag.ProjectCommonDetail.ProjectId';

            //if (projectId != '') {
            //    BindData();
            //}
        });
    </script>

    @*<script type="text/javascript">
        jQuery(document).ready(function () {
            GetProjLocationsData();
            GetHydroSystemData();
            GetFloodFrequencyData();
            GetIrrigatedCropAreaData();
            GetAoFOData();
            GetDswpdData();
            GetEiaData();
            GetSiaData();
            GetEconFinAnaData();

            jQuery("#btnNext").click(function (e) {
                //block 1
                if (jQuery("#lnkTab1").hasClass('active')) {
                    var selectedFormType = jQuery("#ddlTypeOfForms").val();

                    if (selectedFormType === '') {
                        Notification('warning', 'Required Field', 'Please select a form.');
                        e.preventDefault();
                        return false;
                    }
                }
                //end block 1
            });

            jQuery("#btnPrevious").click(function () {

            });
        });

        $(function () {
            $('textarea').avro({ 'bn': true }, function (isBangla) {
                if (isBangla) {
                    console.log('Bangla');
                } else {
                    console.log('English');
                }
            });
        });

        jQuery(window).bind('keydown', function (event) {
            if (event.ctrlKey || event.metaKey) {
                switch (String.fromCharCode(event.which).toLowerCase()) {
                    //case 'b':
                    //    event.preventDefault();
                    //    jQuery('textarea, input[type=text]').avro({ 'bn': true });
                    //    //console.log('You have pressed Ctrl + b');
                    //    break;

                    //case 'e':
                    //    event.preventDefault();
                    //    jQuery('textarea, input[type=text]').avro({ 'bn': false });
                    //    //console.log('You have pressed Ctrl + e');
                    //    break;

                    //to collapse all accordion panel at same time
                    //case 'k':
                    //    event.preventDefault();
                    //    alert('You have pressed Ctrl + k');
                    //    break;

                    //case 's':
                    //    event.preventDefault();
                    //    alert('You have pressed Ctrl + s');
                    //    break;

                    //to expand all accordion panel at same time
                    //case 'x':
                    //    event.preventDefault();
                    //    alert('You have pressed Ctrl + x');
                    //    break;
                }
            }
        });

        jQuery("input[type='radio'][name='YesNoStakeId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divDSDSPYesControls").removeClass('d-none fadeOut');
                jQuery("#divDSDSPYesControls").addClass('d-block fadeIn');
            } else {
                jQuery("#divDSDSPYesControls").removeClass('d-block fadeIn');
                jQuery("#divDSDSPYesControls").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='AnalyzeOptYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divAoFOYes").removeClass('d-none fadeOut');
                jQuery("#divAoFOYes").addClass('d-block fadeIn');
            } else {
                jQuery("#divAoFOYes").removeClass('d-block fadeIn');
                jQuery("#divAoFOYes").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='EnvAndSocialYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divEIAYes, #divSIAYes").removeClass('d-none fadeOut');
                jQuery("#divEIAYes, #divSIAYes").addClass('d-block fadeIn');
            } else {
                jQuery("#divEIAYes, #divSIAYes").removeClass('d-block fadeIn');
                jQuery("#divEIAYes, #divSIAYes").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='CompatNWPYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divCwnwpPolicy").removeClass('d-none fadeOut');
                jQuery("#divCwnwpPolicy").addClass('d-block fadeIn');
            } else {
                jQuery("#divCwnwpPolicy").removeClass('d-block fadeIn');
                jQuery("#divCwnwpPolicy").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='NWMPCompatYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divCNWMP").removeClass('d-none fadeOut');
                jQuery("#divCNWMP").addClass('d-block fadeIn');
            } else {
                jQuery("#divCNWMP").removeClass('d-block fadeIn');
                jQuery("#divCNWMP").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='SDGYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divCwsdg, #divSDG6Indicators").removeClass('d-none fadeOut');
                jQuery("#divCwsdg, #divSDG6Indicators").addClass('d-block fadeIn');
            } else {
                jQuery("#divCwsdg, #divSDG6Indicators").removeClass('d-block fadeIn');
                jQuery("#divCwsdg, #divSDG6Indicators").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='DeltaPlanYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divCwbdp2100").removeClass('d-none fadeOut');
                jQuery("#divCwbdp2100").addClass('d-block fadeIn');
            } else {
                jQuery("#divCwbdp2100").removeClass('d-block fadeIn');
                jQuery("#divCwbdp2100").addClass('d-none fadeOut');
            }
        });

        jQuery("input[type='radio'][name='GPWMYesNoId']").change(function () {
            if (jQuery(this).val() == 1) {
                jQuery("#divCwgpwm").removeClass('d-none fadeOut');
                jQuery("#divCwgpwm").addClass('d-block fadeIn');
            } else {
                jQuery("#divCwgpwm").removeClass('d-block fadeIn');
                jQuery("#divCwgpwm").addClass('d-none fadeOut');
            }
        });

        //start :: Hydrological System JS
        jQuery("#HydroSystemCategoryId").change(function () {
            var name = jQuery("#HydroSystemCategoryId option:selected").text();
            var unit = jQuery("#HydroSystemCategoryId option:selected").attr('title');

            if (unit != '' && unit != undefined) {
                jQuery("#HydroSystemName").text(name);
                jQuery("#HydroSysCategoryUnit").parent('div').removeClass('d-none');
                jQuery("#HydroSysCategoryUnit").text(unit);
            } else {
                jQuery("#HydroSystemName").text('');
                jQuery("#HydroSysCategoryUnit").parent('div').addClass('d-none');
                jQuery("#HydroSysCategoryUnit").text('');
            }
        });

        jQuery("#btnSaveHydroSystem").click(function () {
            var HydroSysDetailId = jQuery("#HydroSysDetailId").val();
            HydroSysDetailId = (HydroSysDetailId == '') ? 0 : HydroSysDetailId;
            var HydroSystemId = jQuery("#HydroSystemCategoryId").val();
            var HydroSystemName = jQuery("#NameOfHydroSystem").val();
            var LengthArea = jQuery("#HydroSystemLengthArea").val();
            var unit = jQuery("#HydroSystemCategoryId option:selected").attr('title');

            if (HydroSystemId != '') {
                if (HydroSystemName != '') {
                    if (LengthArea != '') {
                        var ProjectId = GetHiddenValue('ProjectId');

                        var hydroSystemDetail = {
                            "HydroSysDetailId": HydroSysDetailId,
                            "ProjectId": ProjectId,
                            "HydroSystemCategoryId": HydroSystemId,
                            "NameOfHydroSystem": HydroSystemName,
                            "HydroSystemLengthArea": LengthArea,
                            "HydroSystemUnit": unit
                        };

                        var url = '@Url.Action("hsds", "form")';
                        jQuery.ajax({
                            type: "POST",
                            url: url,
                            data: { _hsd: hydroSystemDetail },
                            dataType: "json",
                            success: function (data, status, jqXHR) {
                                if (data.status == 'success') {
                                    Notification('success', 'Success', data.message);
                                    GetHydroSystemData();
                                    ClearHydroSystem();
                                } else {
                                    Notification('error', 'Saving Error', data.message);
                                }
                            }, error: function (jqXHR, exception) {
                                var errorMsg = AjaxErrorHandle(jqXHR, exception);
                                Notification('error', 'Error Occured', errorMsg);
                            }
                        });
                    } else {
                        Notification('warning', 'Required Field', 'Please enter length area!');
                        jQuery("#HydroSystemLengthArea").focus();
                    }
                } else {
                    Notification('warning', 'Required Field', 'Please enter name!');
                    jQuery("#NameOfHydroSystem").focus();
                }
            } else {
                Notification('warning', 'Required Field', 'Please select a hydrological system!');
                jQuery("#HydroSystemCategoryId").focus();
            }
        });

        jQuery("#btnClearHydroSystem").click(function () {
            ClearHydroSystem();
        });

        function ClearHydroSystem() {
            jQuery("#HydroSysDetailId").val('');
            jQuery("#HydroSystemCategoryId").val('');
            jQuery("#NameOfHydroSystem").val('');
            jQuery("#HydroSystemLengthArea").val('');
            jQuery("#HydroSystemName").text('');
            jQuery("#HydroSysCategoryUnit").text('');
            jQuery("#HydroSysCategoryUnit").parent('div').addClass('d-none');
        }

        function GetHydroSystemData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_hsd", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.hydroSystemCategory + '</td><td>' + item.nameOfHydroSystem + '</td><td>' + item.hydroSystemLengthArea + ' ' + item.hydroSystemUnit + '</td><td class="text-center"><button title="' + item.hydroSysDetailId + '" onclick="javascript:EditHydroSys(' + item.hydroSysDetailId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.hydroSysDetailId + ', ' + item.projectId + ', \'CcModHydroSystemDetail\'); GetHydroSystemData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyHydrologicalSystem").html(rows);
                    } else {
                        jQuery("#tbodyHydrologicalSystem").html('<tr><td colspan="5" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyHydrologicalSystem").html('<tr><td colspan="5" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                }
            });
        }
        //end

        //start :: Flood Frequency JS
        jQuery("#FloodFrequencyId").change(function () {
            var name = jQuery("#FloodFrequencyId option:selected").text();
            //var unit = jQuery("#FloodFrequencyId option:selected").attr('title');
        });

        jQuery("#btnSaveFloodFrequency").click(function () {
            var FloodFrequencyDetailId = GetHiddenValue('FloodFrequencyDetailId');
            FloodFrequencyDetailId = (FloodFrequencyDetailId == '') ? 0 : FloodFrequencyDetailId;
            var FloodFrequencyId = jQuery("#FloodFrequencyId option:selected").val();
            var FloodFrequencyLevel = jQuery("#FloodFrequencyLevel").val();

            if (FloodFrequencyId != '') {
                if (FloodFrequencyLevel != '') {
                    var ProjectId = GetHiddenValue('ProjectId');
                    var floodFrequencyDetail = {
                        "FloodFrequencyDetailId": FloodFrequencyDetailId,
                        "ProjectId": ProjectId,
                        "FloodFrequencyId": FloodFrequencyId,
                        "FloodFrequencyLevel": FloodFrequencyLevel
                    };

                    var url = '@Url.Action("ffds", "form")';
                    jQuery.ajax({
                        type: "POST",
                        url: url,
                        data: { _ffd: floodFrequencyDetail },
                        dataType: "json",
                        success: function (data, status, jqXHR) {
                            if (data.status == 'success') {
                                Notification('success', 'Success', data.message);
                                GetFloodFrequencyData();
                                ClearFloodFrequency();
                            } else {
                                Notification('error', 'Saving Error', data.message);
                            }
                        }, error: function (jqXHR, exception) {
                            var errorMsg = AjaxErrorHandle(jqXHR, exception);
                            Notification('error', 'Error Occured', errorMsg);
                        }
                    });
                } else {
                    Notification('warning', 'Required Field', 'Please enter frequency level!');
                    jQuery("#FloodFrequencyLevel").focus();
                }
            } else {
                Notification('warning', 'Required Field', 'Please select a flood frequency!');
                jQuery("#FloodFrequencyId").focus();
            }
        });

        jQuery("#btnClearFloodFrequency").click(function () {
            ClearFloodFrequency();
        });

        function ClearFloodFrequency() {
            jQuery("#FloodFrequencyDetailId").val('');
            jQuery("#FloodFrequencyId").val('');
            jQuery("#FloodFrequencyLevel").val('');
        }

        function GetFloodFrequencyData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_ffd", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.floodFrequency + '</td><td>' + item.floodFrequencyLevel + '</td><td class="text-center"><button onclick="javascript:EditFloodFreq(' + item.floodFrequencyDetailId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.floodFrequencyDetailId + ', ' + item.projectId + ', \'CcModFloodFrequencyDetail\'); GetFloodFrequencyData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyFloodFrequency").html(rows);
                    } else {
                        jQuery("#tbodyFloodFrequency").html('<tr><td colspan="4" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyFloodFrequency").html('<tr><td colspan="4" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                }
            });
        }
        //end

        //start :: Irrigated Crop Area JS
        jQuery("#HydroSystemCategoryId").change(function () {
            var name = jQuery("#HydroSystemCategoryId option:selected").text();
        });

        jQuery("#btnSaveIrrigatedCropArea").click(function () {
            var IrrigatedCropId = GetHiddenValue('IrrigatedCropId');
            IrrigatedCropId = (IrrigatedCropId == '') ? 0 : IrrigatedCropId;
            var CropName = jQuery("#CropName").val();
            var Area = jQuery("#Area").val();

            if (CropName != '') {
                if (Area != '') {
                    var ProjectId = GetHiddenValue('ProjectId');
                    var irrigCropAreaDetail = {
                        "IrrigatedCropId": IrrigatedCropId,
                        "ProjectId": ProjectId,
                        "CropName": CropName,
                        "Area": Area
                    };

                    var url = '@Url.Action("icas", "form")';
                    jQuery.ajax({
                        type: "POST",
                        url: url,
                        data: { _ica: irrigCropAreaDetail },
                        dataType: "json",
                        success: function (data, status, jqXHR) {
                            if (data.status == 'success') {
                                Notification('success', 'Success', data.message);

                                GetIrrigatedCropAreaData();
                                ClearIrrigatedCropArea();
                            } else {
                                Notification('error', 'Saving Error', data.message);
                            }
                        }, error: function (jqXHR, exception) {
                            var errorMsg = AjaxErrorHandle(jqXHR, exception);
                            Notification('error', 'Error Occured', errorMsg);
                        }
                    });
                } else {
                    Notification('warning', 'Required Field', 'Please enter area!');
                    jQuery("#Area").focus();
                }
            } else {
                Notification('warning', 'Required Field', 'Please enter crop name!');
                jQuery("#CropName").focus();
            }
        });

        jQuery("#btnClearIrrigatedCropArea").click(function () {
            ClearIrrigatedCropArea();
        });

        function ClearIrrigatedCropArea() {
            jQuery("#IrrigatedCropId").val('');
            jQuery("#CropName").val('');
            jQuery("#Area").val('');
        }

        function GetIrrigatedCropAreaData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_ica", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.cropName + '</td><td>' + item.area + '</td><td class="text-center"><button onclick="javascript:EditIca(' + item.irrigatedCropId + ', '+item.projectId+');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.irrigatedCropId + ', '+item.projectId+', \'CcModPrjIrrigCropAreaDetail\'); GetIrrigatedCropAreaData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyIrrigatedCropArea").html(rows);
                    } else {
                        jQuery("#tbodyIrrigatedCropArea").html('<tr><td colspan="4" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyIrrigatedCropArea").html('<tr><td colspan="4" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                }
            });
        }
        //end

        //start :: Analyze options to fulfill objective
        jQuery("#btnSaveAoFOYes").click(function () {
            var AnalyzeOptionsId = jQuery("#AnalyzeOptionsId").val();
            AnalyzeOptionsId = (AnalyzeOptionsId == '') ? 0 : AnalyzeOptionsId;
            var OptionNumber = jQuery("#OptionNumber").val();
            var AnalyzeDescription = jQuery("#AnalyzeDescription").val();
            var AnalyzeRemarks = jQuery("#AnalyzeRemarks").val();

            if (AnalyzeDescription != '') {
                var ProjectId = GetHiddenValue('ProjectId');
                var analyzeOptionsDetail = {
                    "AnalyzeOptionsId": AnalyzeOptionsId,
                    "ProjectId": ProjectId,
                    "OptionNumber": OptionNumber,
                    "AnalyzeDescription": AnalyzeDescription,
                    "AnalyzeRemarks": AnalyzeRemarks
                };

                var url = '@Url.Action("aofos", "form")';
                jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: { _aofd: analyzeOptionsDetail },
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        if (data.status == 'success') {
                            Notification('success', 'Success', data.message);

                            GetAoFOData();
                            ClearAoFO();
                        } else {
                            Notification('error', 'Saving Error', data.message);
                        }
                    }, error: function (jqXHR, exception) {
                        var errorMsg = AjaxErrorHandle(jqXHR, exception);
                        Notification('error', 'Error Occured', errorMsg);
                    }
                });
            } else {
                Notification('warning', 'Required Field', 'Please enter analyze description!');
                jQuery("#CropName").focus();
            }
        });

        jQuery("#btnClearAoFOYes").click(function () {
            ClearAoFO();
        });

        function ClearAoFO() {
            jQuery("#OptionNumber").val('');
            jQuery("#AnalyzeDescription").val('');
            jQuery("#AnalyzeRemarks").val('');
        }

        function GetAoFOData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_aofo", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.optionNumber + '</td><td>' + item.analyzeDescription + '</td><td>' + item.analyzeRemarks + '</td><td class="text-center"><button onclick="javascript:EditAofo(' + item.analyzeOptionsId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.analyzeOptionsId + ', ' + item.projectId + ', \'CcModAnalyzeOptionsDetail\'); GetAoFOData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyAnalyzeOptFulfillObj").html(rows);
                    } else {
                        jQuery("#tbodyAnalyzeOptFulfillObj").html('<tr><td colspan="5" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyAnalyzeOptFulfillObj").html('<tr><td colspan="5" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                }
            });
        }
        //end

        //region start :: Design submitted with project document JS
        jQuery("#btnSaveDSWPD").click(function () {
            var DesignSubmittedId = GetHiddenValue('DesignSubmittedId');
            DesignSubmittedId = (DesignSubmittedId == '') ? 0 : DesignSubmittedId;
            var DesignSubmittedParameterId = jQuery("#DesignSubmittedParameterId option:selected").val();
            var DswpYesNoId = jQuery("input:radio[name='dswpdYN']:checked").val();
            DswpYesNoId = (DswpYesNoId == '') ? 0 : DswpYesNoId;
            var DesignSubmitApplicantCmt = jQuery("#DesignSubmitApplicantCmt").val();
            var DesignSubmitAuthorityCmt = jQuery("#DesignSubmitAuthorityCmt").val();

            if (AnalyzeDescription != '') {
                var ProjectId = GetHiddenValue('ProjectId');
                var designSubParamDetail = {
                    "DesignSubmittedId": DesignSubmittedId,
                    "ProjectId": ProjectId,
                    "DesignSubmittedParameterId": DesignSubmittedParameterId,
                    "YesNoId": DswpYesNoId,
                    "DesignSubmitApplicantCmt": DesignSubmitApplicantCmt,
                    "DesignSubmitAuthorityCmt": DesignSubmitAuthorityCmt
                };

                //console.log(designSubParamDetail);
                //console.log(DswpYesNoId);

                var url = '@Url.Action("dswpds", "form")';
                jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: { _dspd: designSubParamDetail },
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        if (data.status == 'success') {
                            Notification('success', 'Success', data.message);

                            GetDswpdData();
                            ClearDswpd();
                        } else {
                            Notification('error', 'Saving Error', data.message);
                        }
                    }, error: function (jqXHR, exception) {
                        var errorMsg = AjaxErrorHandle(jqXHR, exception);
                        Notification('error', 'Error Occured', errorMsg);
                    }
                });
            } else {
                Notification('warning', 'Required Field', 'Please enter analyze description!');
                jQuery("#CropName").focus();
            }
        });

        jQuery("#btnClearDSWPD").click(function () {
            ClearDswpd();
        });

        function ClearDswpd() {
            jQuery("#DesignSubmittedId").val('');
            jQuery("#DesignSubmittedParameterId").val('');
            jQuery("#DesignSubmitApplicantCmt").val('');
            jQuery("#DesignSubmitAuthorityCmt").val('');
            //jQuery("input:radio[name='dswpdYN']").val('');
            //jQuery("input:radio[name='dswpdYN']:checked").prop('checked', false);
        }

        function GetDswpdData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_dswpd", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.parameterName + '</td><td>' + item.dswpdYN + '</td><td>' + item.designSubmitApplicantCmt + '</td><td>' + item.designSubmitAuthorityCmt + '</td><td class="text-center"><button onclick="javascript:EditDesiSub(' + item.designSubmittedId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.designSubmittedId + ', ' + item.projectId + ', \'CcModDesignSubmitDetail\'); GetDswpdData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyDesignSubProjDoc").html(rows);
                    } else {
                        jQuery("#tbodyDesignSubProjDoc").html('<tr><td colspan="6" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyDesignSubProjDoc").html('<tr><td colspan="6" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                }
            });
        }
        //endregion

        //start :: Environmental Impact Assessment
        jQuery("#btnSaveEIAYes").click(function () {
            var EIAId = GetHiddenValue('EIAId');
            EIAId = (EIAId == '') ? 0 : EIAId;
            var EIAParameterId = jQuery("#EIAParameterId option:selected").val();
            var PreProjectSituation = jQuery("#PreProjectSituation").val();
            var PostProjectSituation = jQuery("#PostProjectSituation").val();
            var PositiveNegativeImpact = jQuery("#PositiveNegativeImpact").val();
            var MitigationPlan = jQuery("#MitigationPlan").val();

            if (EIAParameterId != '') {
                var ProjectId = GetHiddenValue('ProjectId');
                var eiaDetail = {
                    "EIAId": EIAId,
                    "ProjectId": ProjectId,
                    "EIAParameterId": EIAParameterId,
                    "PreProjectSituation": PreProjectSituation,
                    "PostProjectSituation": PostProjectSituation,
                    "PositiveNegativeImpact": PositiveNegativeImpact,
                    "MitigationPlan": MitigationPlan
                };

                var url = '@Url.Action("eiads", "form")';
                jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: { _eia: eiaDetail },
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        if (data.status == 'success') {
                            Notification('success', 'Success', data.message);

                            GetEiaData();
                            ClearEIA();
                        } else {
                            Notification('error', 'Saving Error', data.message);
                        }
                    }, error: function (jqXHR, exception) {
                        var errorMsg = AjaxErrorHandle(jqXHR, exception);
                        Notification('error', 'Error Occured', errorMsg);
                    }
                });
            } else {
                Notification('warning', 'Required Field', 'Please select an option from EIA parameter!');
                jQuery("#EIAParameterId").focus();
            }
        });

        jQuery("#btnClearEIAYes").click(function () {
            ClearEIA();
        });

        function ClearEIA() {
            jQuery("#EIAId").val('');
            jQuery("#EIAParameterId").val('');
            jQuery("#PreProjectSituation").val('');
            jQuery("#PostProjectSituation").val('');
            jQuery("#PositiveNegativeImpact").val('');
            jQuery("#MitigationPlan").val('');
        }

        function GetEiaData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_eiad", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.parameterName + '</td><td>' + item.preProjectSituation + '</td><td>' + item.postProjectSituation + '</td><td>' + item.positiveNegativeImpact + '</td><td>' + item.mitigationPlan + '</td><td class="text-center"><button onclick="javascript:EditEia(' + item.eiaId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.eiaId + ', ' + item.projectId + ', \'CcModPrjEIADetail\'); GetEiaData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyEIADetail").html(rows);
                    } else {
                        jQuery("#tbodyEIADetail").html('<tr><td colspan="7" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                        //Notification('error', 'Data Fetch Error', data.message);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyEIADetail").html('<tr><td colspan="7" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                    //Notification('error', 'Error Occured', errorMsg);
                }
            });
        }
        //end

        //start :: Social Impact Assessment
        jQuery("#btnSaveSIAYes").click(function () {
            var SIAId = GetHiddenValue('SIAId');
            SIAId = (SIAId == '') ? 0 : SIAId;
            var SIAParameterId = jQuery("#SIAParameterId option:selected").val();
            var SiaPreProjectSituation = jQuery("#SiaPreProjectSituation").val();
            var SiaPostProjectSituation = jQuery("#SiaPostProjectSituation").val();
            var SiaPositiveNegativeImpact = jQuery("#SiaPositiveNegativeImpact").val();
            var SiaMitigationPlan = jQuery("#SiaMitigationPlan").val();

            if (SIAParameterId != '') {
                var ProjectId = GetHiddenValue('ProjectId');
                var siaDetail = {
                    "SIAId": SIAId,
                    "ProjectId": ProjectId,
                    "SIAParameterId": SIAParameterId,
                    "PreProjectSituation": SiaPreProjectSituation,
                    "PostProjectSituation": SiaPostProjectSituation,
                    "PositiveNegativeImpact": SiaPositiveNegativeImpact,
                    "MitigationPlan": SiaMitigationPlan
                };

                var url = '@Url.Action("siads", "form")';
                jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: { _sia: siaDetail },
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        if (data.status == 'success') {
                            Notification('success', 'Success', data.message);

                            GetSiaData();
                            ClearSIA();
                        } else {
                            Notification('error', 'Saving Error', data.message);
                        }
                    }, error: function (jqXHR, exception) {
                        var errorMsg = AjaxErrorHandle(jqXHR, exception);
                        Notification('error', 'Error Occured', errorMsg);
                    }
                });
            } else {
                Notification('warning', 'Required Field', 'Please select an option from SIA parameter!');
                jQuery("#EIAParameterId").focus();
            }
        });

        jQuery("#btnClearSIAYes").click(function () {
            ClearSIA();
        });

        function ClearSIA() {
            jQuery("#SIAId").val('');
            jQuery("#SIAParameterId").val('');
            jQuery("#SiaPreProjectSituation").val('');
            jQuery("#SiaPostProjectSituation").val('');
            jQuery("#SiaPositiveNegativeImpact").val('');
            jQuery("#SiaMitigationPlan").val('');
        }

        function GetSiaData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_siad", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.siaParameterName + '</td><td>' + item.preProjectSituation + '</td><td>' + item.postProjectSituation + '</td><td>' + item.positiveNegativeImpact + '</td><td>' + item.mitigationPlan + '</td><td class="text-center"><button onclick="javascript:EditSia(' + item.siaId + ', ' + item.projectId + ');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.siaId + ', ' + item.projectId + ', \'CcModPrjSIADetail\'); GetSiaData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodySIADetail").html(rows);
                    } else {
                        jQuery("#tbodySIADetail").html('<tr><td colspan="7" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                        //Notification('error', 'Data Fetch Error', data.message);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodySIADetail").html('<tr><td colspan="7" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                    //Notification('error', 'Error Occured', errorMsg);
                }
            });
        }
        //end

        //start :: Economical & Financial Analysis
        jQuery("#btnSaveEconFinAna").click(function () {
            var EconomicalAndFinancialId = GetHiddenValue('EconomicalAndFinancialId');
            EconomicalAndFinancialId = (EconomicalAndFinancialId == '') ? 0 : EconomicalAndFinancialId;
            var EcoAndFinancialParamId = jQuery("#EcoAndFinancialParamId option:selected").val();
            var EcoAndFinParamUnit = jQuery("#EcoAndFinancialParamUnit option:selected").val();
            var EcoAndFinApplicantCmt = jQuery("#EcoAndFinancialApplicantCmt").val();
            var EcoAndFinAuthorityCmt = jQuery("#EcoAndFinancialAuthorityCmt").val();

            if (EcoAndFinancialParamId != '') {
                var ProjectId = GetHiddenValue('ProjectId');
                var ecoFinAnaDetail = {
                    "EconomicalAndFinancialId": EconomicalAndFinancialId,
                    "ProjectId": ProjectId,
                    "EcoAndFinancialParamId": EcoAndFinancialParamId,
                    "EcoAndFinancialParamUnit": EcoAndFinParamUnit,
                    "EcoAndFinancialApplicantCmt": EcoAndFinApplicantCmt,
                    "EcoAndFinancialAuthorityCmt": EcoAndFinAuthorityCmt
                };

                var url = '@Url.Action("efas", "form")';
                jQuery.ajax({
                    type: "POST",
                    url: url,
                    data: { _efas: ecoFinAnaDetail },
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        if (data.status == 'success') {
                            Notification('success', 'Success', data.message);

                            GetEconFinAnaData();
                            ClearEconFinAna();
                        } else {
                            Notification('error', 'Saving Error', data.message);
                        }
                    }, error: function (jqXHR, exception) {
                        var errorMsg = AjaxErrorHandle(jqXHR, exception);
                        Notification('error', 'Error Occured', errorMsg);
                    }
                });
            } else {
                Notification('warning', 'Required Field', 'Please select an option!');
                jQuery("#EcoAndFinancialParamId").focus();
            }
        });

        jQuery("#btnClearEconFinAna").click(function () {
            ClearEconFinAna();
        });

        function ClearEconFinAna() {
            jQuery("#EconomicalAndFinancialId").val('');
            jQuery("#EcoAndFinancialParamId").val('');
            jQuery("#EcoAndFinancialParamUnit").val('');
            jQuery("#EcoAndFinancialApplicantCmt").val('');
            jQuery("#EcoAndFinancialAuthorityCmt").val('');
        }

        function GetEconFinAnaData() {
            var ProjectId = GetHiddenValue('ProjectId');
            var url = '@Url.Action("get_efad", "form")';

            jQuery.ajax({
                type: "GET",
                url: url,
                data: { project_id: ProjectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.length > 0) {
                        //console.log(data);
                        var rows = '';

                        var count = 0;
                        jQuery.each(data, function (i, item) {
                            ++count;
                            rows += '<tr><td scope="row" class="bold">' + count + '</td><td>' + item.ecoAndFinancialParamName + '</td><td>' + item.ecoAndFinancialParamUnit + '</td><td>' + item.ecoAndFinancialApplicantCmt + '</td><td>' + item.ecoAndFinancialAuthorityCmt + '</td><td class="text-center"><button onclick="javascript:EditEfa(' + item.economicalAndFinancialId + ', '+item.projectId+');" type="button" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-lead-pencil"></i></button> <button onclick="javascript:Delete(' + item.economicalAndFinancialId + ', '+item.projectId+', \'CcModPrjEcoFinAnalysisDetail\'); GetEconFinAnaData();" type="button" class="btn btn-danger waves-effect waves-light"><i class="mdi mdi-delete"></i></button></td></tr>';
                        });

                        jQuery("#tbodyEcoFinAna").html(rows);
                    } else {
                        jQuery("#tbodyEcoFinAna").html('<tr><td colspan="6" class="text-center text-red"><div class="alert alert-warning" role="alert"> Sorry, no data found </div></td></tr>');
                        //Notification('error', 'Data Fetch Error', data.message);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    jQuery("#tbodyEcoFinAna").html('<tr><td colspan="6" class="text-center text-red"><div class="alert alert-danger" role="alert">' + errorMsg + '</div></td></tr>');
                    //Notification('error', 'Error Occured', errorMsg);
                }
            });
        }
        //end

        //start :: Technical Information JS
        jQuery("#btnSaveTechInfo").click(function () {
            var FinalObj = [];
            var hydroRegions = [], bdp2100HotSpot = [], typesOfFlood = [];
            var ProjectId = GetHiddenValue('ProjectId');

            jQuery.each(jQuery("input[name='hydrological_region']:checked"), function () {
                var _hr = {
                    "PrjHydroRegionDetailId": 0,
                    "ProjectId": ProjectId,
                    "HydroRegionId": jQuery(this).val()
                };

                hydroRegions.push(_hr);
            });

            jQuery.each(jQuery("input[name='bdp2100_hot_spot']:checked"), function () {
                var _hsp = {
                    "HotSpotDetailId": 0,
                    "ProjectId": ProjectId,
                    "DeltaPlanHotSpotId": jQuery(this).val()
                };

                bdp2100HotSpot.push(_hsp);
            });

            jQuery.each(jQuery("input[name='types_of_flood']:checked"), function () {
                var _tof = {
                    "FloodTypeDetailId": 0,
                    "ProjectId": ProjectId,
                    "FloodTypeId": jQuery(this).val()
                };

                typesOfFlood.push(_tof);
            });

            var ProjectCommonDetail = {
                "ProjectId": ProjectId,
                "AnnualRainFallLast1Year": GetTextValue('AnnualRainFallLast1Year'),
                "AnnualRainFallLast2Years": GetTextValue('AnnualRainFallLast2Years'),
                "AnnualRainFallLast3Years": GetTextValue('AnnualRainFallLast3Years'),
                "AnnualRainFallLast4Years": GetTextValue('AnnualRainFallLast4Years'),
                "AnnualRainFallLast5Years": GetTextValue('AnnualRainFallLast5Years'),
                "IssueChallageProblem": GetTextValue('IssueChallageProblem'),
                "YesNoStakeId": GetRadioValue('YesNoStakeId'),
                "DiscussWithStakeApplicantCmt": GetTextValue('DiscussWithStakeApplicantCmt'),
                "DiscussWithStakeAuthorityCmt": GetTextValue('DiscussWithStakeAuthorityCmt'),
                "DiscussWithStakePosFeedback": GetTextValue('DiscussWithStakePosFeedback'),
                "DiscussWithStakeNegFeedback": GetTextValue('DiscussWithStakeNegFeedback'),
                //"DiscussWithStakeParticipntLst": , //file
                //"DiscussWithStakeMeetingMin": , //file
                "AnalyzeOptYesNoId": GetRadioValue('AnalyzeOptYesNoId'),
                "AnalyzeOptionsApplicantCmt": GetTextValue('AnalyzeOptionsApplicantCmt'),
                "AnalyzeOptionsAuthorityCmt": GetTextValue('AnalyzeOptionsAuthorityCmt'),
                "EnvAndSocialYesNoId": GetRadioValue('EnvAndSocialYesNoId'),
                "EnvAndSocialApplicantCmt": GetTextValue('EnvAndSocialApplicantCmt'),
                "EnvAndSocialAuthorityCmt": GetTextValue('EnvAndSocialAuthorityCmt')
            };

            var Project31IndvDetail = {
                "Project31IndvId": 0,
                "ProjectId": ProjectId,
                "ConnectivityAmidWaterland": GetTextValue('ConnectivityAmidWaterland'),
                "CatchmentArea": GetTextValue('CatchmentArea'),
                "HighestFloodLevel": GetTextValue('HighestFloodLevel'),
                "MaximumDischarge": GetTextValue('MaximumDischarge'),
                "DrainageConditionId": GetRadioValue('drainage_condition'),
                "WaterSalinity": GetTextValue('WaterSalinity'),
                "WaterDO": GetTextValue('WaterDO'),
                "WaterTDS": GetTextValue('WaterTDS'),
                "WaterPhLevel": GetTextValue('WaterPhLevel'),
                "HighLandPercent": GetTextValue('HighLandPercent'),
                "MediumHighLandPercent": GetTextValue('MediumHighLandPercent'),
                "MediumLowLandPercent": GetTextValue('MediumLowLandPercent'),
                "LowLandPercent": GetTextValue('LowLandPercent'),
                "VeryLowLandPercent": GetTextValue('VeryLowLandPercent'),
                "CultivableCrops": GetTextValue('CultivableCrops'),
                "CropProduction": GetTextValue('CropProduction'),
                "FishProduction": GetTextValue('FishProduction'),
                "FishDiversity": GetTextValue('FishDiversity'),
                "FishMigration": GetTextValue('FishMigration'),
                "FloraAndFauna": GetTextValue('FloraAndFauna'),
                "LandLessPeoplePercentage": GetTextValue('LandLessPeoplePercentage'),
                "SmallFarmerPercentage": GetTextValue('SmallFarmerPercentage'),
                "AvgMonthlyIncome": GetTextValue('AvgMonthlyIncome'),
                "UseOfToolsYesNoId": GetRadioValue('UseOfToolsYesNoId'),
                "ToolsApplicantComments": GetTextValue('ToolsApplicantComments'),
                "ToolsAuthorityComments": GetTextValue('ToolsAuthorityComments')
            };

            var _Form31FinalObj = {
                "CommonDetail": ProjectCommonDetail,
                "Project31Indv": Project31IndvDetail,
                "HydroRegion": hydroRegions,
                "BDP2100HotSpot": bdp2100HotSpot,
                "TypesOfFlood": typesOfFlood
            }

            //console.log(_Form31FinalObj); //jQuery('#ProjectId').val()

            var url = '@Url.Action("f31tiotos", "form")';
            jQuery.ajax({
                type: "POST",
                url: url,
                data: { _form31TechInfo: _Form31FinalObj },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.status == 'success') {
                        Notification('success', 'Success', data.message);
                    } else {
                        Notification('error', 'Saving Error', data.message);
                    }

                    SetHiddenValue('Project31IndvId', data.id);
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        });

        jQuery("#btnClearTechInfo").click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sure"
            }).then(function (t) {
                t.value && Swal.fire("Cleared!", "Your entry data has been cleared successfully.", "success")
            });
        });
        //end

        //start :: Deed Obligatory JS
        jQuery("#btnSaveDeed").click(function () {
            var _finalDeedObj = [];
            var nwpArticles = [], prjCompatNWMP = [], sdgGoals = [],
                sdgIndicators = [], dp2100Goals = [], gpwmGroupType = [];
            var ProjectId = GetHiddenValue('ProjectId');
            var Project31IndvId = GetHiddenValue('Project31IndvId');

            jQuery.each(jQuery("input[name='NationalWaterPolicyArticleId']:checked"), function () {
                var _nwpa = {
                    "PrjCompatNWPId": 0,
                    "ProjectId": ProjectId,
                    "NationalWaterPolicyArticleId": jQuery(this).val()
                };

                nwpArticles.push(_nwpa);
            });

            jQuery.each(jQuery("input[name='PrjCompatNWMPId']:checked"), function () {
                var _nwmpa = {
                    "PrjCompatNWMPId": 0,
                    "ProjectId": ProjectId,
                    "NWMPProgrammeId": jQuery(this).val()
                };

                prjCompatNWMP.push(_nwmpa);
            });

            jQuery.each(jQuery("input[name='SDGGoalId']:checked"), function () {
                var _sdg = {
                    "SDGCompabilityId": 0,
                    "ProjectId": ProjectId,
                    "SDGGoalId": jQuery(this).val()
                };

                sdgGoals.push(_sdg);
            });

            jQuery.each(jQuery("input[name='SDGIndicatorId']:checked"), function () {
                var _sdgi = {
                    "SDGIndicatorDetailId": 0,
                    "ProjectId": ProjectId,
                    "SDGIndicatorId": jQuery(this).val()
                };

                sdgIndicators.push(_sdgi);
            });

            jQuery.each(jQuery("input[name='DeltPlan2100GoalId']:checked"), function () {
                var _dp2100g = {
                    "DeltaGoalDetailId": 0,
                    "ProjectId": ProjectId,
                    "DeltPlan2100GoalId": jQuery(this).val()
                };

                dp2100Goals.push(_dp2100g);
            });

            jQuery.each(jQuery("input[name='GPWMGroupTypeId']:checked"), function () {
                var _gpwmg = {
                    "GPWMGroupTypeDetailId": 0,
                    "ProjectId": ProjectId,
                    "GPWMGroupTypeId": jQuery(this).val()
                };

                gpwmGroupType.push(_gpwmg);
            });

            var ProjectCommonDetail = {
                "ProjectId": ProjectId,
                "CompatNWPYesNoId": GetRadioValue('CompatNWPYesNoId'),
                "CompatibilityNWPApplicantCmt": GetTextValue('CompatibilityNWPApplicantCmt'),
                "CompatibilityNWPAuthorityCmt": GetTextValue('CompatibilityNWPAuthorityCmt'),
                //CompatibilityNWPDocLink //file
                "NWMPCompatYesNoId": GetRadioValue('NWMPCompatYesNoId'),
                "NWMPApplicantCmt": GetTextValue('NWMPApplicantCmt'),
                "NWMPAuthorityCmt": GetTextValue('NWMPAuthorityCmt'),
                //NWMPDocLink //file
                "FYPYesNoId": GetRadioValue('FYPYesNoId'),
                "FYPApplicantCmt": GetTextValue('FYPApplicantCmt'),
                "FYPAuthorityCmt": GetTextValue('FYPAuthorityCmt'),
                "SDGYesNoId": GetRadioValue('SDGYesNoId'),
                "SDGApplicantCmt": GetTextValue('SDGApplicantCmt'),
                "SDGAuthorityCmt": GetTextValue('SDGAuthorityCmt'),
                //SDGDocLink //file
                "DeltaPlanYesNoId": GetRadioValue('DeltaPlanYesNoId'),
                "DeltaPlan2100ApplicantCmt": GetTextValue('DeltaPlan2100ApplicantCmt'),
                "DeltaPlan2100AuthorityCmt": GetTextValue('DeltaPlan2100AuthorityCmt'),
                //DeltaPlan2100DocLink //file
                "CostalZoneYesNoId": GetRadioValue('CostalZoneYesNoId'),
                "CostalZoneApplicantCmt": GetTextValue('CostalZoneApplicantCmt'),
                "CostalZoneAuthorityCmt": GetTextValue('CostalZoneAuthorityCmt'),
                //CostalZoneDocLink //file.

                "CiwupYesNoId": GetRadioValue('CiwupYesNoId'),
                "CiwupApplicantCmt": GetTextValue('CiwupApplicantCmt'),
                "CiwupAuthorityCmt": GetTextValue('CiwupAuthorityCmt'),
                //CiwupDocLink //file.

                "AgriculturalYesNoId": GetRadioValue('AgriculturalYesNoId'),
                "AgriApplicantCmt": GetTextValue('AgriApplicantCmt'),
                "AgriAuthorityCmt": GetTextValue('AgriAuthorityCmt'),
                //AgriDocLink //file
                "FisheriesYesNoId": GetRadioValue('FisheriesYesNoId'),
                "FisheriesApplicantCmt": GetTextValue('FisheriesApplicantCmt'),
                "FisheriesAuthorityCmt": GetTextValue('FisheriesAuthorityCmt'),
                //FisheriesDocLink //file
                "IWRMYesNoId": GetRadioValue('IWRMYesNoId'),
                "IWRMApplicantCmt": GetTextValue('IWRMApplicantCmt'),
                "IWRMAuthorityCmt": GetTextValue('IWRMAuthorityCmt'),
                "GPWMYesNoId": GetRadioValue('GPWMYesNoId'),
                "GPWMApplicantCmt": GetTextValue('GPWMApplicantCmt'),
                "GPWMAuthorityCmt": GetTextValue('GPWMAuthorityCmt'),
                "FeasibilityYesNoId": GetRadioValue('FeasibilityYesNoId'),
                "FeasibilityApplicantCmt": GetTextValue('FeasibilityApplicantCmt'),
                "FeasibilityAuthorityCmt": GetTextValue('FeasibilityAuthorityCmt'),
                "SocialIssuesYesNoId": GetRadioValue('SocialIssuesYesNoId'),
                "SocialIssuesApplicantCmt": GetTextValue('SocialIssuesApplicantCmt'),
                "SocialIssuesAuthorityCmt": GetTextValue('SocialIssuesAuthorityCmt')
            };

            var Project31IndvDetail = {
                "Project31IndvId": Project31IndvId,
                "ProjectId": ProjectId,
                "DuplicatYesNoId": GetRadioValue('DuplicatYesNoId'),
                "DuplicationApplicantComments": GetTextValue('DuplicationApplicantComments'),
                "DuplicationAuthorityComments": GetTextValue('DuplicationAuthorityComments')
            };

            var _finalDeedObj = {
                "CommonDetail": ProjectCommonDetail,
                "Project31Indv": Project31IndvDetail,
                "CompatNWPDetail": nwpArticles,
                "CompatNWMPDetail": prjCompatNWMP,
                "CompatSDGDetail": sdgGoals,
                "CompatSDGIndiDetail": sdgIndicators,
                "BDP2100GoalDetail": dp2100Goals,
                "GPWMGroupTypeDetail": gpwmGroupType
            }

            //console.log(_finalDeedObj); //jQuery('#ProjectId').val()

            var url = '@Url.Action("f31dootos", "form")';
            jQuery.ajax({
                type: "POST",
                url: url,
                data: { _form31DeedObli: _finalDeedObj },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.status == 'success') {
                        Notification('success', 'Success', data.message);
                    } else {
                        Notification('error', 'Saving Error', data.message);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        });

        jQuery("#btnClearDeed").click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sure"
            }).then(function (t) {
                t.value && Swal.fire("Cleared!", "Your entry data has been cleared successfully.", "success")
            });
        });
        //end

        //start :: Administrative JS
        jQuery("#btnSaveAdministrative").click(function () {
            var _recDetail = {
                "ProjectId": GetHiddenValue('ProjectId'),
                "NocTypeId": jQuery('#NocTypeId option:selected').val(),
                "PaymentMethodId": jQuery('#PaymentMethodId option:selected').val(),
                "PaymentDocNumber": GetTextValue('PaymentDocNumber'),
                "PaidAmount": GetTextValue('PaidAmount'),
				"PaymentDate": GetTextValue('PaymentDate'),
                "RecommendationId": jQuery('#RecommendationId option:selected').val(),
                "RecommendationComment": GetTextValue('RecommendationComment')
            };

            //console.log(_recDetail);

            var url = '@Url.Action("afrds", "form")';
            jQuery.ajax({
                type: "POST",
                url: url,
                data: { _recDetail: _recDetail },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.status == 'success') {
                        Notification('success', 'Success', data.message);
                    } else {
                        Notification('error', 'Saving Error', data.message);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        });

        jQuery("#btnClearAdministrative").click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sure"
            }).then(function (t) {
                t.value && Swal.fire("Cleared!", "Your entry data has been cleared successfully.", "success")
            });
        });
        //end

        //region Get Set
        function GetTextValue(control) {
            return jQuery('#' + control).val();
        }

        function SetTextValue(control, val) {
            return jQuery('#' + control).val(val);
        }

        function GetHiddenValue(control) {
            return jQuery('#' + control).val();
        }

        function SetHiddenValue(control, val) {
            return jQuery('#' + control).val(val);
        }

        function SetDropdownValue(control, val) {
            return jQuery('#' + control).val(val);
        }

        function GetRadioValue(control) {
            var value = $("input[name='" + control + "']:checked").val();
            return (value == undefined || value == '') ? 0 : value;
        }
        //endregion

        function EditHydroSys(id, projectId) {
            var url = '@Url.Action("gshs", "form")';
            jQuery.ajax({
                type: "GET",
                url: url,
                data: { id: id, projectId: projectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.hydroSysDetailId != '') {
                        //console.log(data);

                        SetHiddenValue('HydroSysDetailId', data.hydroSysDetailId);
                        jQuery("#HydroSystemCategoryId option[value=" + data.hydroSystemCategoryId + "]").prop('selected', true);
                        SetTextValue('NameOfHydroSystem', data.nameOfHydroSystem);
                        SetTextValue('HydroSystemLengthArea', data.hydroSystemLengthArea);
                        jQuery("#HydroSysCategoryUnit").parent('div').removeClass('d-none');
                        jQuery("#HydroSysCategoryUnit").text(data.hydroSystemUnit);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        }

        function EditFloodFreq(id, projectId) {
            var url = '@Url.Action("gsff", "form")';
            jQuery.ajax({
                type: "GET",
                url: url,
                data: { id: id, projectId: projectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.floodFrequencyDetailId != '') {
                        //console.log('Single Flood Frequency Detail Id');
                        //console.log(data);

                        SetHiddenValue('FloodFrequencyDetailId', data.floodFrequencyDetailId);
                        jQuery("#FloodFrequencyId option[value=" + data.floodFrequencyId + "]").prop('selected', true);
                        SetTextValue('FloodFrequencyLevel', data.floodFrequencyLevel);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        }

        function EditIca(id, projectId) {
            var url = '@Url.Action("gsica", "form")';
            jQuery.ajax({
                type: "GET",
                url: url,
                data: { id: id, projectId: projectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    if (data.irrigatedCropId != '') {
                        //console.log('Single Irrigated Crop Area');
                        //console.log(data);

                        SetHiddenValue('IrrigatedCropId', data.irrigatedCropId);
                        SetTextValue('CropName', data.cropName);
                        SetTextValue('Area', data.area);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        }

        function EditAofo(id, projectId) {
            var url = '@Url.Action("gsaod", "form")';
            jQuery.ajax({
                type: "GET",
                url: url,
                data: { id: id, projectId: projectId },
                dataType: "json",
                success: function (data, status, jqXHR) {
                    //console.log('Single Analyze Options Detail');
                    //console.log(data);

                    if (data.analyzeOptionsId != '') {
                        SetHiddenValue('AnalyzeOptionsId', data.analyzeOptionsId);
                        SetTextValue('OptionNumber', data.optionNumber);
                        SetTextValue('AnalyzeDescription', data.analyzeDescription);
                        SetTextValue('AnalyzeRemarks', data.analyzeRemarks);
                    }
                }, error: function (jqXHR, exception) {
                    var errorMsg = AjaxErrorHandle(jqXHR, exception);
                    Notification('error', 'Error Occured', errorMsg);
                }
            });
        }

        function EditDesiSub(id, projectId) {
	        var url = '@Url.Action("gsdswpd", "form")';
	        jQuery.ajax({
		        type: "GET",
		        url: url,
		        data: { id: id, projectId: projectId },
		        dataType: "json",
		        success: function (data, status, jqXHR) {
			        //console.log('Single Analyze Options Detail');
			        //console.log(data);

			        if (data.designSubmittedId != '') {
				        SetHiddenValue('DesignSubmittedId', data.designSubmittedId);
				        jQuery("#DesignSubmittedParameterId option[value=" + data.designSubmittedParameterId + "]").prop('selected', true);
				        $(":radio[name='dswpdYN'][value='" + data.dswpdYN + "']").attr('checked', true);
				        SetTextValue('DesignSubmitApplicantCmt', data.designSubmitApplicantCmt);
				        SetTextValue('DesignSubmitAuthorityCmt', data.designSubmitAuthorityCmt);
			        }
		        }, error: function (jqXHR, exception) {
			        var errorMsg = AjaxErrorHandle(jqXHR, exception);
			        Notification('error', 'Error Occured', errorMsg);
		        }
	        });
        }

        function EditEia(id, projectId) {
	        var url = '@Url.Action("gseia", "form")';
	        jQuery.ajax({
		        type: "GET",
		        url: url,
		        data: { id: id, projectId: projectId },
		        dataType: "json",
		        success: function (data, status, jqXHR) {
			        //console.log('Single EIA Detail');
			        //console.log(data);

                    if (data.eiaId != '') {
				        SetHiddenValue('EIAId', data.eiaId);
				        jQuery("#EIAParameterId option[value=" + data.eiaParameterId + "]").prop('selected', true);
				        SetTextValue('PreProjectSituation', data.preProjectSituation);
                        SetTextValue('PostProjectSituation', data.postProjectSituation);
                        SetTextValue('PositiveNegativeImpact', data.positiveNegativeImpact);
                        SetTextValue('MitigationPlan', data.mitigationPlan);
			        }
		        }, error: function (jqXHR, exception) {
			        var errorMsg = AjaxErrorHandle(jqXHR, exception);
			        Notification('error', 'Error Occured', errorMsg);
		        }
	        });
        }

        function EditSia(id, projectId) {
	        var url = '@Url.Action("gssia", "form")';
	        jQuery.ajax({
		        type: "GET",
		        url: url,
		        data: { id: id, projectId: projectId },
		        dataType: "json",
		        success: function (data, status, jqXHR) {
			        //console.log('Single SIA Detail');
			        //console.log(data);

                    if (data.eiaId != '') {
				        SetHiddenValue('SIAId', data.siaId);
				        jQuery("#SIAParameterId option[value=" + data.siaParameterId + "]").prop('selected', true);
				        SetTextValue('SiaPreProjectSituation', data.preProjectSituation);
                        SetTextValue('SiaPostProjectSituation', data.postProjectSituation);
                        SetTextValue('SiaPositiveNegativeImpact', data.positiveNegativeImpact);
                        SetTextValue('SiaMitigationPlan', data.mitigationPlan);
			        }
		        }, error: function (jqXHR, exception) {
			        var errorMsg = AjaxErrorHandle(jqXHR, exception);
			        Notification('error', 'Error Occured', errorMsg);
		        }
	        });
        }

        function EditEfa(id, projectId) {
	        var url = '@Url.Action("gsefa", "form")';
	        jQuery.ajax({
		        type: "GET",
		        url: url,
		        data: { id: id, projectId: projectId },
		        dataType: "json",
		        success: function (data, status, jqXHR) {
			        //console.log('Single Eco Fin Analysis Detail');
			        //console.log(data);

                    if (data.eiaId != '') {
				        SetHiddenValue('EconomicalAndFinancialId', data.economicalAndFinancialId);
                        jQuery("#EcoAndFinancialParamId option[value=" + data.ecoAndFinancialParamId + "]").prop('selected', true);
                        jQuery("#ddlEconFinAnaUnit option[value=" + data.ecoAndFinancialParamId + "]").prop('selected', true);
				        SetTextValue('EcoAndFinancialParamUnit', data.ecoAndFinancialParamUnit);
                        SetTextValue('EcoAndFinancialApplicantCmt', data.ecoAndFinancialApplicantCmt);
                        SetTextValue('EcoAndFinancialAuthorityCmt', data.ecoAndFinancialAuthorityCmt);
			        }
		        }, error: function (jqXHR, exception) {
			        var errorMsg = AjaxErrorHandle(jqXHR, exception);
			        Notification('error', 'Error Occured', errorMsg);
		        }
	        });
        }

        function BindData() {
            var projectId = '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectId)';

            if (projectId != '') {
                console.log('Form 31 ViewBag.ProjectCommonDetail.ProjectId: ' + projectId);

                //General Info
                SetHiddenValue('ProjectId', projectId);
                SetHiddenValue('Project31IndvId', '@Html.Raw(ViewBag.ProjectIndvDetail31.Project31IndvId)');
                SetHiddenValue('UserId', '@Html.Raw(ViewBag.ProjectCommonDetail.UserId)');

                if('@ViewBag.ProjectCommonDetail.ProjectTypeId' != '' && '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectTypeId)' != 0)
                    SetHiddenValue('ProjectTypeId', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectTypeId)');

                var pn = '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectName)';
                console.log(pn);

                SetTextValue('ProjectName', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectName)');
                SetTextValue('BackgroundAndRationale', '@Html.Raw(ViewBag.ProjectCommonDetail.BackgroundAndRationale)');
                SetTextValue('ProjectTarget', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectTarget)');
                SetTextValue('ProjectObjective', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectObjective)');
                SetTextValue('ProjectActivity', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectActivity)');
                SetTextValue('ProjectStartDate', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectStartDate)');
                SetTextValue('ProjectCompletionDate', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectCompletionDate)');
                SetTextValue('ProjectEstimatedCost', '@Html.Raw(ViewBag.ProjectCommonDetail.ProjectEstimatedCost)');

                ////location
                //SetDropdownValue('DistrictGeoCode', 'Html.Raw(ViewBag.ProjectLocationDetail.DistrictGeoCode)');
                //SetDropdownValue('UpazilaGeoCode', 'Html.Raw(ViewBag.ProjectLocationDetail.UpazilaGeoCode)');
                //SetDropdownValue('UnionGeoCode', 'Html.Raw(ViewBag.ProjectLocationDetail.UnionGeoCode)');
                //SetDropdownValue('Latitude', 'Html.Raw(ViewBag.ProjectLocationDetail.Latitude)');
                //SetDropdownValue('Longitude', 'Html.Raw(ViewBag.ProjectLocationDetail.Longitude)');

                var hrs = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.HydroRegionDetail))');
                jQuery.each(hrs, function (i, item) {
                    $(":checkbox[name='hydrological_region'][value='" + item.hydroRegionId + "']").attr('checked', true);
                });

                var hsd = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.BDP2100HotSpotDetail))');
                jQuery.each(hsd, function (i, item) {
                    $(":checkbox[name='bdp2100_hot_spot'][value='" + item.deltaPlanHotSpotId + "']").attr('checked', true);
                });

                SetTextValue('ConnectivityAmidWaterland', '@Html.Raw(ViewBag.ProjectIndvDetail31.ConnectivityAmidWaterland)');
                SetTextValue('CatchmentArea', '@Html.Raw(ViewBag.ProjectIndvDetail31.CatchmentArea)');

                SetTextValue('AnnualRainFallLast1Year', '@Html.Raw(ViewBag.ProjectCommonDetail.AnnualRainFallLast1Year)');
                SetTextValue('AnnualRainFallLast2Years', '@Html.Raw(ViewBag.ProjectCommonDetail.AnnualRainFallLast2Years)');
                SetTextValue('AnnualRainFallLast3Years', '@Html.Raw(ViewBag.ProjectCommonDetail.AnnualRainFallLast3Years)');
                SetTextValue('AnnualRainFallLast4Years', '@Html.Raw(ViewBag.ProjectCommonDetail.AnnualRainFallLast4Years)');
                SetTextValue('AnnualRainFallLast5Years', '@Html.Raw(ViewBag.ProjectCommonDetail.AnnualRainFallLast5Years)');

                SetTextValue('HighestFloodLevel', '@Html.Raw(ViewBag.ProjectIndvDetail31.HighestFloodLevel)');
                SetTextValue('MaximumDischarge', '@Html.Raw(ViewBag.ProjectIndvDetail31.MaximumDischarge)');

                var tof = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.TypesOfFloodDetail))');
                jQuery.each(tof, function (i, item) {
                    $(":checkbox[name='types_of_flood'][value='" + item.floodTypeId + "']").attr('checked', true);
                });

                var DrainageConditionId = '@Html.Raw(ViewBag.ProjectIndvDetail31.DrainageConditionId)';
                if(DrainageConditionId != '')
                    $(":radio[name='drainage_condition'][value='" + DrainageConditionId + "']").attr('checked', true);

                SetTextValue('WaterSalinity', '@Html.Raw(ViewBag.ProjectIndvDetail31.WaterSalinity)');
                SetTextValue('WaterDO', '@Html.Raw(ViewBag.ProjectIndvDetail31.WaterDO)');
                SetTextValue('WaterTDS', '@Html.Raw(ViewBag.ProjectIndvDetail31.WaterTDS)');
                SetTextValue('WaterPhLevel', '@Html.Raw(ViewBag.ProjectIndvDetail31.WaterPhLevel)');
                SetTextValue('HighLandPercent', '@Html.Raw(ViewBag.ProjectIndvDetail31.HighLandPercent)');
                SetTextValue('MediumHighLandPercent', '@Html.Raw(ViewBag.ProjectIndvDetail31.MediumHighLandPercent)');
                SetTextValue('MediumLowLandPercent', '@Html.Raw(ViewBag.ProjectIndvDetail31.MediumLowLandPercent)');
                SetTextValue('LowLandPercent', '@Html.Raw(ViewBag.ProjectIndvDetail31.LowLandPercent)');
                SetTextValue('VeryLowLandPercent', '@Html.Raw(ViewBag.ProjectIndvDetail31.VeryLowLandPercent)');
                SetTextValue('CultivableCrops', '@Html.Raw(ViewBag.ProjectIndvDetail31.CultivableCrops)');
                SetTextValue('CropProduction', '@Html.Raw(ViewBag.ProjectIndvDetail31.CropProduction)');
                SetTextValue('FishProduction', '@Html.Raw(ViewBag.ProjectIndvDetail31.FishProduction)');
                SetTextValue('FishDiversity', '@Html.Raw(ViewBag.ProjectIndvDetail31.FishDiversity)');
                SetTextValue('FishMigration', '@Html.Raw(ViewBag.ProjectIndvDetail31.FishMigration)');
                SetTextValue('FloraAndFauna', '@Html.Raw(ViewBag.ProjectIndvDetail31.FloraAndFauna)');
                SetTextValue('LandLessPeoplePercentage', '@Html.Raw(ViewBag.ProjectIndvDetail31.LandLessPeoplePercentage)');
                SetTextValue('SmallFarmerPercentage', '@Html.Raw(ViewBag.ProjectIndvDetail31.SmallFarmerPercentage)');
                SetTextValue('AvgMonthlyIncome', '@Html.Raw(ViewBag.ProjectIndvDetail31.AvgMonthlyIncome)');

                SetTextValue('IssueChallageProblem', '@Html.Raw(ViewBag.ProjectCommonDetail.IssueChallageProblem)');

				var YesNoStakeId = '@Html.Raw(ViewBag.ProjectCommonDetail.YesNoStakeId)';
				if (YesNoStakeId != '') {
                    $(":radio[name='YesNoStakeId'][value='" + YesNoStakeId + "']").attr('checked', true);

                    if (YesNoStakeId == 1) {
                        jQuery("#divDSDSPYesControls").removeClass('d-none fadeOut');
                        jQuery("#divDSDSPYesControls").addClass('d-block fadeIn');
                    } else {
                        jQuery("#divDSDSPYesControls").removeClass('d-block fadeIn');
                        jQuery("#divDSDSPYesControls").addClass('d-none fadeOut');
                    }
                }

                SetTextValue('DiscussWithStakeApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.DiscussWithStakeApplicantCmt)');
                SetTextValue('DiscussWithStakeAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.DiscussWithStakeAuthorityCmt)');
                SetTextValue('DiscussWithStakePosFeedback', '@Html.Raw(ViewBag.ProjectCommonDetail.DiscussWithStakePosFeedback)');
                SetTextValue('DiscussWithStakeNegFeedback', '@Html.Raw(ViewBag.ProjectCommonDetail.DiscussWithStakeNegFeedback)');

				var AnalyzeOptYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.AnalyzeOptYesNoId)';
				if(AnalyzeOptYesNoId != '')
					$(":radio[name='AnalyzeOptYesNoId'][value='" + AnalyzeOptYesNoId + "']").attr('checked', true);

                SetTextValue('AnalyzeOptionsApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.AnalyzeOptionsApplicantCmt)');
                SetTextValue('AnalyzeOptionsAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.AnalyzeOptionsAuthorityCmt)');

				var EnvAndSocialYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.EnvAndSocialYesNoId)';
				if(EnvAndSocialYesNoId != '')
					$(":radio[name='EnvAndSocialYesNoId'][value='" + EnvAndSocialYesNoId + "']").attr('checked', true);

                SetTextValue('EnvAndSocialApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.EnvAndSocialApplicantCmt)');
                SetTextValue('EnvAndSocialAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.EnvAndSocialAuthorityCmt)');

				var UseOfToolsYesNoId = '@Html.Raw(ViewBag.ProjectIndvDetail31.UseOfToolsYesNoId)';
				if(UseOfToolsYesNoId != '')
					$(":radio[name='UseOfToolsYesNoId'][value='" + UseOfToolsYesNoId + "']").attr('checked', true);

                SetTextValue('ToolsApplicantComments', '@Html.Raw(ViewBag.ProjectIndvDetail31.ToolsApplicantComments)');
                SetTextValue('ToolsAuthorityComments', '@Html.Raw(ViewBag.ProjectIndvDetail31.ToolsAuthorityComments)');

				var CompatNWPYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.CompatNWPYesNoId)';
				if(CompatNWPYesNoId != '')
					$(":radio[name='CompatNWPYesNoId'][value='" + CompatNWPYesNoId + "']").attr('checked', true);

                SetTextValue('CompatibilityNWPApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.CompatibilityNWPApplicantCmt)');
                SetTextValue('CompatibilityNWPAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.CompatibilityNWPAuthorityCmt)');

                var nwp = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.CompatNWPDetail))');
                jQuery.each(nwp, function (i, item) {
                    $(":checkbox[name='NationalWaterPolicyArticleId'][value='" + item.nationalWaterPolicyArticleId + "']").attr('checked', true);
                });

				var NWMPCompatYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.NWMPCompatYesNoId)';
				if(NWMPCompatYesNoId != '')
					$(":radio[name='NWMPCompatYesNoId'][value='" + NWMPCompatYesNoId + "']").attr('checked', true);

                SetTextValue('NWMPApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.NWMPApplicantCmt)');
                SetTextValue('NWMPAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.NWMPAuthorityCmt)');

                var nwmp = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.CompatNWMPDetail))');
                jQuery.each(nwmp, function (i, item) {
                    $(":checkbox[name='PrjCompatNWMPId'][value='" + item.nwmpProgrammeId + "']").attr('checked', true);
                });

				var FYPYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.FYPYesNoId)';
				if(FYPYesNoId != '')
					$(":radio[name='FYPYesNoId'][value='" + FYPYesNoId + "']").attr('checked', true);

                SetTextValue('FYPApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FYPApplicantCmt)');
                SetTextValue('FYPAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FYPAuthorityCmt)');

				var SDGYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.SDGYesNoId)';
                if (SDGYesNoId != '') {
                    $(":radio[name='SDGYesNoId'][value='" + SDGYesNoId + "']").attr('checked', true);

                    if (SDGYesNoId == 1) {
                        jQuery("#divCwsdg, #divSDG6Indicators").removeClass('d-none fadeOut');
                        jQuery("#divCwsdg, #divSDG6Indicators").addClass('d-block fadeIn');
                    } else {
                        jQuery("#divCwsdg, #divSDG6Indicators").removeClass('d-block fadeIn');
                        jQuery("#divCwsdg, #divSDG6Indicators").addClass('d-none fadeOut');
                    }
                }

                SetTextValue('SDGApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.SDGApplicantCmt)');
                SetTextValue('SDGAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.SDGAuthorityCmt)');

                var sdgdetail = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.CompatSDGDetail))');
                jQuery.each(sdgdetail, function (i, item) {
                    $(":checkbox[name='SDGGoalId'][value='" + item.sdgGoalId + "']").attr('checked', true);
                });

                var sdgindi = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.CompatSDGIndiDetail))');
                jQuery.each(sdgindi, function (i, item) {
                    $(":checkbox[name='SDGIndicatorId'][value='" + item.sdgIndicatorId + "']").attr('checked', true);
                });

				var DeltaPlanYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.DeltaPlanYesNoId)';
				if(DeltaPlanYesNoId != '')
					$(":radio[name='DeltaPlanYesNoId'][value='" + DeltaPlanYesNoId + "']").attr('checked', true);

                SetTextValue('DeltaPlan2100ApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.DeltaPlan2100ApplicantCmt)');
                SetTextValue('DeltaPlan2100AuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.DeltaPlan2100AuthorityCmt)');

                var bdp2100goal = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.BDP2100GoalDetail))');
                jQuery.each(bdp2100goal, function (i, item) {
                    $(":checkbox[name='DeltPlan2100GoalId'][value='" + item.deltPlan2100GoalId + "']").attr('checked', true);
                });

				var CostalZoneYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.CostalZoneYesNoId)';
				if(CostalZoneYesNoId != '')
					$(":radio[name='CostalZoneYesNoId'][value='" + CostalZoneYesNoId + "']").attr('checked', true);

                SetTextValue('CostalZoneApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.CostalZoneApplicantCmt)');
                SetTextValue('CostalZoneAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.CostalZoneAuthorityCmt)');

				var AgriculturalYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.AgriculturalYesNoId)';
				if(AgriculturalYesNoId != '')
					$(":radio[name='AgriculturalYesNoId'][value='" + AgriculturalYesNoId + "']").attr('checked', true);

                SetTextValue('AgriApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.AgriApplicantCmt)');
                SetTextValue('AgriAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.AgriAuthorityCmt)');

				var FisheriesYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.FisheriesYesNoId)';
				if(FisheriesYesNoId != '')
					$(":radio[name='FisheriesYesNoId'][value='" + FisheriesYesNoId + "']").attr('checked', true);

                SetTextValue('FisheriesApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FisheriesApplicantCmt)');
                SetTextValue('FisheriesAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FisheriesAuthorityCmt)');

				var IWRMYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.IWRMYesNoId)';
				if(IWRMYesNoId != '')
					$(":radio[name='IWRMYesNoId'][value='" + IWRMYesNoId + "']").attr('checked', true);

                SetTextValue('IWRMApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.IWRMApplicantCmt)');
                SetTextValue('IWRMAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.IWRMAuthorityCmt)');

				var GPWMYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.GPWMYesNoId)';
				if(GPWMYesNoId != '')
					$(":radio[name='GPWMYesNoId'][value='" + GPWMYesNoId + "']").attr('checked', true);

                SetTextValue('GPWMApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.GPWMApplicantCmt)');
                SetTextValue('GPWMAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.GPWMAuthorityCmt)');

                var gpwmgroup = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.GPWMGroupType))');
                jQuery.each(gpwmgroup, function (i, item) {
                    $(":checkbox[name='GPWMGroupTypeId'][value='" + item.gpwmGroupTypeId + "']").attr('checked', true);
                });

				var FeasibilityYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.FeasibilityYesNoId)';
				if(FeasibilityYesNoId != '')
					$(":radio[name='FeasibilityYesNoId'][value='" + FeasibilityYesNoId + "']").attr('checked', true);

                SetTextValue('FeasibilityApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FeasibilityApplicantCmt)');
                SetTextValue('FeasibilityAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.FeasibilityAuthorityCmt)');

				var DuplicatYesNoId = '@Html.Raw(ViewBag.ProjectIndvDetail31.DuplicatYesNoId)';
				if(DuplicatYesNoId != '')
					$(":radio[name='DuplicatYesNoId'][value='" + DuplicatYesNoId + "']").attr('checked', true);

                SetTextValue('DuplicationApplicantComments', '@Html.Raw(ViewBag.ProjectIndvDetail31.DuplicationApplicantComments)');
                SetTextValue('DuplicationAuthorityComments', '@Html.Raw(ViewBag.ProjectIndvDetail31.DuplicationAuthorityComments)');

				var SocialIssuesYesNoId = '@Html.Raw(ViewBag.ProjectCommonDetail.SocialIssuesYesNoId)';
				if(SocialIssuesYesNoId != '')
					$(":radio[name='SocialIssuesYesNoId'][value='" + SocialIssuesYesNoId + "']").attr('checked', true);

                SetTextValue('SocialIssuesApplicantCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.SocialIssuesApplicantCmt)');
                SetTextValue('SocialIssuesAuthorityCmt', '@Html.Raw(ViewBag.ProjectCommonDetail.SocialIssuesAuthorityCmt)');

                SetDropdownValue('RecommendationId', '@Html.Raw(ViewBag.ProjectCommonDetail.RecommendationId)');
                SetTextValue('RecommendationComment', '@Html.Raw(ViewBag.ProjectCommonDetail.RecommendationComment)');
            }
        }

        function Delete(id, projectId, modelName) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this",
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sure"
            }).then(function (t) {
                if (t.value == true) {
                    var url = '@Url.Action("cdm", "form")';
                    jQuery.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id, projectId: projectId, modelName: modelName },
                        dataType: "json",
                        success: function (data, status, jqXHR) {
                            if (data.status == 'success') {
                                Notification('success', 'Success', data.message);
                                Swal.fire("Success", data.message, "success");
                            } else {
                                Notification('error', 'Deletion Error', data.message);
                                Swal.fire("Deletion Error", data.message, "error");
                            }
                        }, error: function (jqXHR, exception) {
                            var errorMsg = AjaxErrorHandle(jqXHR, exception);
                            Notification('error', 'Error Occured', errorMsg);
                        }
                    });
                }
            });
        }

        jQuery("#btnFinalSubmit").click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "Your application will be submitted to higher authority for approval. \nYou can not edit or update anything after final submission.",
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, Submit"
            }).then(function (t) {
                if (t.value == true) {
                    var projectId = GetHiddenValue('ProjectId');

                    var url = '@Url.Action("fcmp", "form")';
                    jQuery.ajax({
                        type: "POST",
                        url: url,
                        data: { id: projectId },
                        dataType: "json",
                        success: function (data, status, jqXHR) {
                            if (data.message != '') {
                                Notification(data.status, data.title, data.message);
                                Swal.fire(data.title, data.message, data.status);
                            }

                            //if (data.status == 'success') {
                            //    Notification('success', 'Success', data.message);
                            //    Swal.fire("Success", data.message, data.status);
                            //} else {
                            //    Notification('error', 'Deletion Error', data.message);
                            //    Swal.fire("Submission Error", data.message, "error");
                            //}
                        }, error: function (jqXHR, exception) {
                            var errorMsg = AjaxErrorHandle(jqXHR, exception);
                            Notification('error', 'Error Occured', errorMsg);
                            Swal.fire('Error Occured', errorMsg, 'error');
                        }
                    });
                }
            });
        });

        function UploadCommonFiles(inputid) {
	        var projectid = GetHiddenValue('ProjectId');
	        var input = document.getElementById(inputid);
	        var files = input.files;

	        var formData = new FormData();
	        formData.append("projectid", projectid);
	        formData.append("controltitle", inputid);
	        formData.append("file", files[0]);

            var url = '@Url.Action("ucdf", "form")';
	        $.ajax({
		        url: url,
		        data: formData,
		        processData: false,
		        contentType: false,
		        type: "POST",
		        success: function (data) {
			        if (data.message != '')
				        Swal.fire(data.title, data.message, data.status);
		        }, error: function (jqXHR, exception) {
			        var errorMsg = AjaxErrorHandle(jqXHR, exception);
			        Swal.fire('Error Occured', errorMsg, 'error');
		        }
	        });
        }

        function GoBack() {
            var title='', text = '', lang = '@HttpContextAccessor.HttpContext.Request.Cookies["FormLanguage"].ToString()';
            console.log(lang);
            if (lang == "1") {
                title = "আপনি কি নিশ্চিত?";
                text = "আপনার প্রদত্ত ডেটা সফলভাবে সংরক্ষণ করা হয়েছে কিনা তা নিশ্চিত করুন!";
            } else {
                title = "Are you sure?";
                text = "Please make sure the data you have provided that has been saved successfully!";
            }

            Swal.fire({
                title: title,
                text: text,
                type: "warning",
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: !0,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sure"
            }).then(function (t) {
                if (t.value == true) {
                    var url = '@Url.Action("index", "form")';
                    window.location.href = url;
                }
            });
        }
    </script>*@
}