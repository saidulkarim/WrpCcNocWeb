@model WrpCcNocWeb.Models.AdminModUsersDetail

@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";

    var ac = "on"; //ac = auto complete
}

<div class="account-pages mt-5 mb-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-10 col-lg-10" style="margin-top: 50px;">
                <div class="card bg-pattern">
                    <div class="card-body">
                        <div class="text-left m-auto">
                            <h3>User ID: <b class="text-blue">@ViewBag.UserName</b></h3>
                        </div>

                        <div class="text-right m-auto d-sm-none" style="margin-top: -50px !important; margin-right: -50px !important;">
                            <a href="javascript: void(0);">
                                <span><img src="~/images/logo-dark.png" alt="WARPO" height="60"></span>
                            </a>
                        </div>

                        <input type="hidden" id="UserRegistrationId" name="UserRegistrationId" value="@ViewBag.UserRegistrationID" />
                        <input type="hidden" id="UserHasDefPwd" name="UserHasDefPwd" value="@ViewBag.UserHasDefPwd" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ApplicantTypeId, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.DropDownList("ApplicantTypeId", null, string.Empty, new { @id = "ApplicantTypeId", @class = "form-control", @style = "width: 100%;" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ApplicantName, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.ApplicantName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter applicant name in english", @autocomplete = ac } })
                                </div>

                                <div class="form-group" data-toggle="tooltip" title="Press Control + B to change language.">
                                    @Html.LabelFor(m => m.ApplicantNameBn, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.ApplicantNameBn, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter applicant name in bengali", @autocomplete = ac } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.OrganizationName, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.OrganizationName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter organization name in english", @autocomplete = ac } })
                                </div>

                                <div class="form-group" data-toggle="tooltip" title="Press Control + B to change language.">
                                    @Html.LabelFor(m => m.OrganizationNameBn, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.OrganizationNameBn, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter organization name in bengali", @autocomplete = ac } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.OrganizationAddress, new { @class = "control-label" })
                                    @Html.EditorFor(m => m.OrganizationAddress, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter organization address in english", @autocomplete = ac } })
                                </div>

                                <div class="form-group" data-toggle="tooltip" title="Press Control + B to change language.">
                                    @Html.LabelFor(m => m.OrganizationAddressBn, new { @class = "control-label" })
                                    @Html.EditorFor(m => m.OrganizationAddressBn, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter organization address in bengali", @autocomplete = ac } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserProfession, new { @class = "control-label" })
                                    @Html.EditorFor(m => m.UserProfession, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter profession" } })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserDesignation, new { @class = "control-label" })
                                    @Html.EditorFor(m => m.UserDesignation, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter designation" } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserNID, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.UserNID, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter national identity number (NID)" } })
                                </div>

                                <div class="form-group">
                                    <label for="NidFileName" data-toggle="tooltip"
                                           title="NID must be .jpg/.png/.bmp formatted and file size not more than 1 MB (Min. 200 KB)">
                                        Upload NID <span class="text-danger bold">*</span>
                                    </label>
                                    <div class="input-group" style="width: 200px;">
                                        <div class="custom-file">
                                            <input id="NidFileName" name="NidFileName" type="file" class="custom-file-input"
                                                   onchange="return ValidateNidFileUpload()" />
                                            <label id="ViewNidFileName" for="NidFileName" class="custom-file-label">
                                                Choose file
                                            </label>
                                            <img id="PrevNidFile" src="~/images/sample_nid.png" style="height: 36px; margin-left: 225px;" />
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PostalAddress, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.PostalAddress, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter postal address in english", } })
                                </div>

                                <div class="form-group" data-toggle="tooltip" title="Press Control + B to change language.">
                                    @Html.LabelFor(m => m.PostalAddressBn, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.PostalAddressBn, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter postal address in bengali", } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecurityQuestionId, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.DropDownList("SecurityQuestionId", null, string.Empty, new { @id = "SecurityQuestionId", @class = "form-control", @style = "width: 100%;" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecurityQuestionAnswer, new { @class = "control-label" }) <span class="text-danger bold">*</span>
                                    @Html.EditorFor(m => m.SecurityQuestionAnswer, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Security question answer" } })
                                </div>

                                <div class="form-group">
                                    <label for="SignatureFileName" data-toggle="tooltip"
                                           title="Signature must be 300 X 80 pixel (width X height) [.jpg/.png/.bmp format] and file size not more than 80 KB (Min. 3 KB)">
                                        Upload Signature <span class="text-danger bold">*</span>
                                    </label>
                                    <div class="input-group" style="width: 200px;">
                                        <div class="custom-file">
                                            <input id="SignatureFileName" name="SignatureFileName" type="file" class="custom-file-input"
                                                   onchange="return ValidateFileUpload()" />
                                            <label id="ViewSignatureFileName" for="SignatureFileName" class="custom-file-label">
                                                Choose file
                                            </label>
                                            <img id="PrevSignatureFile" src="~/images/sample_signature.jpg" style="width: 200px; height: 36px; margin-left: 225px;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6" style="margin-top: 30px;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <button id="btnSubmitProfileInfo" class="btn btn-primary btn-block" type="submit"> Submit </button>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <button id="btnClearProfileInfo" class="btn btn-secondary btn-block" type="reset"> Clear </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    jQuery.noConflict();

    jQuery(document).ready(function () {
        jQuery('#ApplicantNameBn, #OrganizationNameBn, #OrganizationAddressBn, #PostalAddressBn').avro({ 'bn': true });

        jQuery('#ApplicantTypeId').change(function () {
            var this_val = jQuery('#ApplicantTypeId option:selected').val();

            if (this_val == 1) {
                $('#ApplicantName, #ApplicantNameBn, #UserProfession').attr('disabled', false);
                $('#OrganizationName, #OrganizationNameBn, #OrganizationAddress, #OrganizationAddressBn, #UserDesignation').attr('disabled', true);
            } else if (this_val == 2) {
                $('#ApplicantName, #ApplicantNameBn, #UserProfession').attr('disabled', true);
                $('#OrganizationName, #OrganizationNameBn, #OrganizationAddress, #OrganizationAddressBn, #UserDesignation').attr('disabled', false);
            } else {
                Notification('warning', 'Required Field', 'Please select an applicant type!');
                jQuery('#ApplicantTypeId').focus();

                $('#ApplicantName, #ApplicantNameBn, #UserProfession').attr('disabled', true);
                $('#OrganizationName, #OrganizationNameBn, #OrganizationAddress, #OrganizationAddressBn, #UserDesignation').attr('disabled', true);
            }
        });
    });

    jQuery("#btnSubmitProfileInfo").click(function () {
        var uhdp = GetHiddenValue('UserHasDefPwd');
        var UserRegistrationId = GetHiddenValue('UserRegistrationId');
        var ApplicantTypeId = GetDropdownValue('ApplicantTypeId');
        var ApplicantName = GetTextValue('ApplicantName');
        var ApplicantNameBn = GetTextValue('ApplicantNameBn');
        var OrganizationName = GetTextValue('OrganizationName');
        var OrganizationNameBn = GetTextValue('OrganizationNameBn');
        var OrganizationAddress = GetTextValue('OrganizationAddress');
        var OrganizationAddressBn = GetTextValue('OrganizationAddressBn');
        var UserProfession = GetTextValue('UserProfession');
        var UserDesignation = GetTextValue('UserDesignation');
        var UserNID = GetTextValue('UserNID');
        var PostalAddress = GetTextValue('PostalAddress');
        var PostalAddressBn = GetTextValue('PostalAddressBn');
        var SecurityQuestionId = GetDropdownValue('SecurityQuestionId');
        var SecurityQuestionAnswer = GetTextValue('SecurityQuestionAnswer');        

        var nfn = document.getElementById('NidFileName');
        var fileNid = nfn.files;
        var sfn = document.getElementById('SignatureFileName');
        var fileSignature = sfn.files;

        if (ApplicantTypeId == '' || ApplicantTypeId == undefined) {
            Notification('warning', 'Required Field', 'Please select an applicant type!');
            Swal.fire('Required Field', 'Please select an applicant type!', 'warning');
            jQuery('#ApplicantTypeId').focus();
            return;
        }

        if (ApplicantTypeId == 1) {
            if (ApplicantName == '' || ApplicantName == undefined) {
                Notification('warning', 'Required Field', 'Please enter applicant name in english!');
                //Swal.fire('Required Field', 'Please enter applicant name!', 'warning');
                jQuery('#ApplicantName').focus();
                return;
            }

            if (ApplicantNameBn == '' || ApplicantNameBn == undefined) {
                Notification('warning', 'Required Field', 'Please enter applicant name in bengali!');
                //Swal.fire('Required Field', 'Please enter applicant name!', 'warning');
                jQuery('#ApplicantNameBn').focus();
                return;
            }

            if (UserProfession == '' || UserProfession == undefined) {
                Notification('warning', 'Required Field', 'Please enter applicant profession!');
                //Swal.fire('Required Field', 'Please enter applicant profession!', 'warning');
                jQuery('#UserProfession').focus();
                return;
            }
        }
        else if (ApplicantTypeId == 2) {
            if (OrganizationName == '' || OrganizationName == undefined) {
                Notification('warning', 'Required Field', 'Please enter organization name in english!');
                //Swal.fire('Required Field', 'Please enter organization name in english!', 'warning');
                jQuery('#OrganizationName').focus();
                return;
            }

            if (OrganizationNameBn == '' || OrganizationNameBn == undefined) {
                Notification('warning', 'Required Field', 'Please enter organization name in bengali!');
                //Swal.fire('Required Field', 'Please enter organization name in bengali!', 'warning');
                jQuery('#OrganizationNameBn').focus();
                return;
            }

            if (OrganizationAddress == '' || OrganizationAddress == undefined) {
                Notification('warning', 'Required Field', 'Please enter organization address in english!');
                //Swal.fire('Required Field', 'Please enter organization address in english!', 'warning');
                jQuery('#OrganizationAddress').focus();
                return;
            }

            if (OrganizationAddressBn == '' || OrganizationAddressBn == undefined) {
                Notification('warning', 'Required Field', 'Please enter organization address in bengali!');
                //Swal.fire('Required Field', 'Please enter organization address in bengali!', 'warning');
                jQuery('#OrganizationAddressBn').focus();
                return;
            }
        }
        else {
            Notification('warning', 'Required Field', 'Please select an applicant type!');
            jQuery('#ApplicantTypeId').focus();
            return;
        }

        if (UserNID == '' || UserNID == undefined) {
            Notification('warning', 'Required Field', 'Please enter your national identity number (NID)!');
            Swal.fire('Required Field', 'Please enter your national identity number (NID)!', 'warning');
            jQuery('#UserNID').focus();
            return;
        }

        if (PostalAddress == '' || PostalAddress == undefined) {
            Notification('warning', 'Required Field', 'Please enter your postal address!');
            Swal.fire('Required Field', 'Please enter your postal address!', 'warning');
            jQuery('#PostalAddress').focus();
            return;
        }

        if (PostalAddressBn == '' || PostalAddressBn == undefined) {
            Notification('warning', 'Required Field', 'Please enter your postal address in bengali!');
            Swal.fire('Required Field', 'Please enter your postal address in bengali!', 'warning');
            jQuery('#PostalAddressBn').focus();
            return;
        }

        if (fileNid.length == 0) {
            Notification('warning', 'Required Field', 'Please select your national identity number (NID) file!');
            //Swal.fire('Required Field', 'Please select your national identity number (NID) file!', 'warning');
            return;
        }

        if (fileSignature.length == 0) {
            Notification('warning', 'Required Field', 'Please select your digital signature file!');
            //Swal.fire('Required Field', 'Please select your digital signature file!', 'warning');
            return;
        }

        Swal.fire({
            title: "Are you sure?",
            //html: 'Application will be rejected. Do you wish to continue? <br /> <div class="form-group"><label for="txtRejectReason"><span class="badge badge-info">Please Specify Reject Reason</span> <span class="text-danger bold">*</span></label><input type="text" id="txtRejectReason" name="txtRejectReason" class="form-control"></div>',
            type: "warning",
            allowEscapeKey: false,
            allowOutsideClick: false,
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Submit"
        }).then(function (t) {
            var formData = new FormData();
            formData.append("UserId", '0');
            formData.append("UserRegistrationId", UserRegistrationId);
            formData.append("ApplicantTypeId", ApplicantTypeId);
            formData.append("ApplicantName", ApplicantName);
            formData.append("ApplicantNameBn", ApplicantNameBn);
            formData.append("OrganizationName", OrganizationName);
            formData.append("OrganizationNameBn", OrganizationNameBn);
            formData.append("OrganizationAddress", OrganizationAddress);
            formData.append("OrganizationAddressBn", OrganizationAddressBn);
            formData.append("UserProfession", UserProfession);
            formData.append("UserDesignation", UserDesignation);
            formData.append("UserNID", UserNID);
            formData.append("PostalAddress", PostalAddress);
            formData.append("PostalAddressBn", PostalAddressBn);
            formData.append("SecurityQuestionId", SecurityQuestionId);
            formData.append("SecurityQuestionAnswer", SecurityQuestionAnswer);
            formData.append("file", fileSignature[0]);
            formData.append("nidFile", fileNid[0]);

            if (t.value == true) {
                if (UserRegistrationId != '') {
                    var url = '@Url.Action("saveprofile", "account")';

                    $.ajax({
                        url: url,
                        data: formData,
                        processData: false,
                        contentType: false,
                        type: "POST",
                        success: function (data, status, jqXHR) {
                            console.log(data);

                            if (data.message != '') {
                                if (data.status == 'success') {
                                    Notification(data.status, data.title, data.message);
                                    Swal.fire(data.title, data.message, data.status);

                                    if (uhdp == 1) {
                                        setTimeout(function () { RedirectToChngPwd(); }, 3000);
                                    } else {
                                        setTimeout(function () { RedirectToHome(); }, 5000);
                                    }
                                } else {
                                    Notification(data.status, data.title, data.message);
                                    Swal.fire(data.title, data.message, data.status);
                                }
                            }
                        }, error: function (jqXHR, exception) {
                            var errorMsg = AjaxErrorHandle(jqXHR, exception);
                            Notification('error', 'Error Occured', errorMsg);
                            Swal.fire('Error Occured', errorMsg, 'error');
                        }
                    });
                } else {
                    Swal.fire('Required', 'Please register at first!', 'warning');
                    Notification('warning', 'Required', 'Please register at first!');
                }
            }
        });
    });

    function RedirectToHome() {
        var url = '@Url.Action("index", "home")';
        window.location.href = url;
    }

    function RedirectToChngPwd() {
        var url = '@Url.Action("changepassword", "home")';
        window.location.href = url;
    }

    function RedirectToLogin() {
        var url = '@Url.Action("login", "account")';
        window.location.href = url;
    }

    function GetTextValue(control) {
        return jQuery('#' + control).val();
    }

    function GetDropdownValue(control) {
        return jQuery('#' + control+' option:selected').val();
    }

    function GetHiddenValue(control) {
        return jQuery('#' + control).val();
    }

    /*
    function UploadSignatureFile(inputid) {
        var urid = GetHiddenValue('UserRegistrationId');
	    var input = document.getElementById(inputid);
	    var files = input.files;

	    var formData = new FormData();
        formData.append("urid", urid);
	    formData.append("controltitle", inputid);
	    formData.append("file", files[0]);

        var url = 'Url.Action("uusf", "account")';
	    $.ajax({
		    url: url,
		    data: formData,
		    processData: false,
		    contentType: false,
		    type: "POST",
		    success: function (data) {
			    if (data.message != '')
				    Swal.fire(data.title, data.message, data.status);
		    }, error: function (jqXHR, exception) {
			    var errorMsg = AjaxErrorHandle(jqXHR, exception);
			    Swal.fire('Error Occured', errorMsg, 'error');
		    }
	    });
    }
    */

    function ValidateFileUpload() {
        var fuData = document.getElementById('SignatureFileName');
        var FileUploadPath = fuData.value;

        if (FileUploadPath == '') {
            Notification('info', 'Select Signature Image', 'Please select an image of signature.');
            Swal.fire('Select Signature Image', 'Please select an image of signature.', 'info');
        } else {
            var FileName = fuData.files[0].name;
            var Extension = FileName.replace(/^.*\./, '');

            if (Extension == "gif" || Extension == "png" || Extension == "bmp" || Extension == "jpeg" || Extension == "jpg") {
                if (fuData.files && fuData.files[0]) {
                    var reader = new FileReader();
                    reader.readAsDataURL(fuData.files[0]);
                    reader.onload = function (e) {
                        var image = new Image();
                        image.src = e.target.result;
                        image.onload = function () {
                            var height = this.height;
                            var width = this.width;

                            if (height > 85) {
                                Notification('warning', 'Exceeding Image Height', 'Height must not exceed 80px.');
                                Swal.fire('Exceeding Image Height', 'Height must not exceed 80px.', 'warning');

                                return false;
                            }

                            if (width > 315) {
                                Notification('warning', 'Exceeding Image Width', 'Width must not exceed 300px');
                                Swal.fire('Exceeding Image Width', 'Width must not exceed 300px', 'warning');
                                return false;
                            }
                        };

                        $('#PrevSignatureFile').attr('src', e.target.result);
                        $('#PrevSignatureFile').show();
                        $('#ViewSignatureFileName').text(FileName);
                    }
                } else {
                    $('#PrevSignatureFile').attr('src', '../images/sample_signature.jpg');
                    $('#PrevSignatureFile').show();
                    $('#ViewSignatureFileName').text('Choose file');
                }
            }
            else {
                Notification('warning', 'Invalid File Format', 'Photo only allows file types of JPG/ JPEG/ PNG/ GIF/ BMP.');
                Swal.fire('Invalid File Format', 'Photo only allows file types of JPG/ JPEG/ PNG/ GIF/ BMP.', 'warning');

                $('#PrevSignatureFile').attr('src', '../images/sample_signature.jpg');
                $('#PrevSignatureFile').show();
                $('#ViewSignatureFileName').text('Choose file');
            }
        }
    }

    function ValidateNidFileUpload() {
        var fuData = document.getElementById('NidFileName');
        var FileUploadPath = fuData.value;

        if (FileUploadPath == '') {
            Notification('info', 'Select NID File', 'Please select a file of NID.');
            //Swal.fire('Select NID File', 'Please select a file of NID.', 'info');
        } else {
            var FileName = fuData.files[0].name;
            var Extension = FileName.replace(/^.*\./, '');

            if (Extension == "png" || Extension == "bmp" || Extension == "jpeg" || Extension == "jpg") {
                if (fuData.files && fuData.files[0]) {
                    var reader = new FileReader();
                    reader.readAsDataURL(fuData.files[0]);
                    reader.onload = function (e) {
                        var image = new Image();
                        image.src = e.target.result;
                        image.onload = function () {
                            var height = this.height;
                            var width = this.width;

                            if (height > 1080) {
                                Notification('warning', 'Exceeding File Height', 'Height must not exceed 1080px.');
                                //Swal.fire('Exceeding File Height', 'Height must not exceed 1080px.', 'warning');
                                return;
                            }

                            if (width > 1920) {
                                Notification('warning', 'Exceeding File Width', 'Width must not exceed 1920px.');
                                //Swal.fire('Exceeding File Width', 'Width must not exceed 1920px.', 'warning');
                                return;
                            }
                        };

                        $('#PrevNidFile').attr('src', e.target.result);
                        $('#PrevNidFile').show();
                        $('#ViewNidFileName').text(FileName);
                    }
                } else {
                    $('#PrevNidFile').attr('src', '../images/sample_nid.png');
                    $('#PrevNidFile').show();
                    $('#ViewNidFileName').text('Choose file');
                }
            }
            else {
                Notification('warning', 'Invalid File Format', 'Photo only allows file types of JPG/ JPEG/ PNG/ BMP.');
                Swal.fire('Invalid File Format', 'Photo only allows file types of JPG/ JPEG/ PNG/ BMP.', 'warning');

                $('#PrevNidFile').attr('src', '../images/sample_nid.png');
                $('#PrevNidFile').show();
                $('#ViewNidFileName').text('Choose file');
            }
        }
    }

    function toLower(str) {
        var result = '';
        for (var i = 0, len = str.length; i < len; i++) {
            var charAtLocation = str.charCodeAt(i);
            if (charAtLocation > 64 && charAtLocation < 91) //ASCII for upper-case
                result += String.fromCharCode(charAtLocation + 32);
            else
                result += str[i];
        }
        return result;
    }
</script>